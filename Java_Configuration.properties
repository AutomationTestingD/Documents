In Selenium projects, main purpose of the ‘.properties’ files is to store the GUI locators/elements, project configuration data, and database configuration, etc.

If you are using an Id (which is one of the types of element locators) in multiple test cases and it gets modified. Then, you would need to update its value in all test cases. 
Unfortunately, if you miss updating any of them, then the test case eventually will fail. 
You can overcome all of such issues with the help of an object repository. 
You can implement the object repository using Java’s Properties class which is a part of the Java Util package.
You can store the element locators as the key-value pair in a property file. 
You can even use it to hold project configuration properties like username/passwords etc.


How to Read Properties File?


below is the content of config.properties file
url=https://mywipro.wipro.com


script:

//Read data from config.properties file for the url
	File file = new File("C:\\Users\\v-dsamu\\eclipse\\DataDrivenFrameWork\\src\\main\\resources\\config.properties");
	FileInputStream fileInput = new FileInputStream(file);
	Properties prop = new Properties();
	prop.load(fileInput);

//Read data from config.properties file for the url 
       driver.get(prop.getProperty("url")); 


Example:

In Mywipro project all the test cases mostly search for the 'Find an app Here' element and search the application. if id/xpath get changes of it, we have to modify id/xpath of all test cases. say if we have 500 class files(test cases), it would be really hectic task
If we use .properties file for the 'Find an app Here' element, no need to change all 500 test cases. Just we have to update .properties file

FindAppXpath = /html/body/app-root/div/app-landing/div[1]/div/div/app-header/header/div[2]/div[1]/div
