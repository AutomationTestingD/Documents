How you handle Hidden elements?

First store that element in object, let's say element and then write following code to click on that hidden element:

element = driver.find_element_by_xpath("//input[@id='firstname']")

JavascriptExecutor js = (JavascriptExecutor)driver;
js.executeScript("arguments[0].click();", element);


Have you worked on database/backend testing?

No, Database Testing is checking the schema, tables, triggers, etc. of the database under test. It may involve creating complex queries to load/stress test the database and check its responsiveness. It Checks data integrity and consistency. 



Explain about datadriven framework?

A Data Driven framework in Selenium is the technique of separating the “data set” from the actual “test case” (code). 

This framework completely depends on the input test data. The test data is fed from external sources such as an excel file, .CSV file or any database.

Since the test case is separated from the data set, we can easily modify the test case of a particular functionality without making wholesale changes to your code

WebDriver does not directly support reading of excel files. Hence we use Apache POI for reading/ writing to any Microsoft office document

The co-ordination between the main code and data set will be taken care by TestNG Data Providers, which is a library that comes as a part of the Apache POI JAR files. 



what ar the challenges you faced in selenium and overcoming?

Pop-up Windows:
When a simple, prompt, or confirmation alert pops-up, it can be difficult to automate it to either accept or close. Additionally, Windows-based alerts are beyond Selenium’s capabilities since they’re part of the operating system instead of the browser. However, since Selenium WebDriver can operate multiple windows, web-based alerts can usually be handled with the switchTo method to control the pop-up while keeping the browser in the background.

Dynamic Content:(Waiting For Web Page With JavaScript To Load)
Some of the objects may not load as soon as web page loaded. we need to identify the objects and implement explisit  waits or implicit waits

switching to multiple browser windows/sessions, Flakytests which gives postive/negitive results where actually they are opposit. and in generating reports.


Do you have any appium knowledge?

No

Have you worked on Performance Testing

Performance Testing is defined as a type of software testing to ensure software applications will perform well under their expected workload. 

Features and Functionality supported by a software system is not the only concern. A software application's performance like its response time, reliability, resource usage and scalability do matter.

The goal of Performance Testing is not to find bugs but to eliminate performance bottlenecks. 

Speed - Determines whether the application responds quickly
Scalability - Determines maximum user load the software application can handle.
Stability - Determines if the application is stable under varying loads

Types of Performance Testing

Load testing - checks the application's ability to perform under anticipated user loads. The objective is to identify performance bottlenecks before the software application goes live.

Stress testing - involves testing an application under extreme workloads to see how it handles high traffic or data processing. The objective is to identify the breaking point of an application.

Endurance testing - is done to make sure the software can handle the expected load over a long period of time.

Spike testing - tests the software's reaction to sudden large spikes in the load generated by users.

Volume testing - Under Volume Testing large no. of. Data is populated in a database and the overall software system's behavior is monitored. The objective is to check software application's performance under varying database volumes.

Scalability testing - The objective of scalability testing is to determine the software application's effectiveness in "scaling up" to support an increase in user load. It helps plan capacity addition to your software system.


Performance bottlenecks are 
CPU utilization
Memory utilization
Network utilization
Operating System limitations
Disk usage

Example Performance Test Cases
Verify response time is not more than 4 secs when 1000 users access the website simultaneously.
Verify response time of the Application Under Load is within an acceptable range when the network connectivity is slow
Check the maximum number of users that the application can handle before it crashes.
Check database execution time when 500 records are read/written simultaneously.
Check CPU and memory usage of the application and the database server under peak load conditions
Verify response time of the application under low, normal, moderate and heavy load conditions.

Test senario: If the app is expiring on midnight, can we test it on day time?
You need to change the database timing , by using SQL Query. This is the only way you can test the application 

How you run batch file using Selenium?
Using ProcessBuider class and Process class we can load the batch file and using BufferedReader and InputStreamReader we can read the batch execution content

Cross browser testing and cross platform testing
Working on different browsers and diffrent platforms parallally.

State the scenario where you can not automate test

Usability Testing – at times this can be an impossible task to perform by automation as the computer cannot efficiently judge if the system is of any use to its users 

Tests that only need to be executed once – unless the same test needs to be executed for a large dataset then it makes sense to automate

Tests without predictable results – test automation should give us confidence in the results of the tests.If there are intermittent failures then the tests cannot be reliable and cannot be dependent on Tests that need to be verified visually Tests that need to be executed quickly. 

At first, writing an automated test takes longer. If we want a quick check, we should test manually, however, if that test is a good one which should be run regularly, then it should be automated in time


