In Real Time flow of project: Devloper  -> Git -> Jenkins  -> Maven - Tomcat server (.war file)



Developer develop the code, commit changes and push to Git.

In Jenkins using Maven compile, test and package will be done Automatically.

Tomcat server with local host will give the output as soon as you refesh the URL:ip address



GitHub:

dileepkumar.samudrala@gmail.com

DileepDileep@250



Server: https://github.com/Dileep250/Automation.git



Base commands:



Getting & Creating Projects:



Command                                                           Description

git init                                                          Initialize a local Git repository

git clone ssh://git@github.com/[username]/[repository-name].git   Create a local copy of a remote repository





Basic Snapshotting:



Command                                       Description

git status                                    Check status

git add [file-name.txt]                       Add a file to the staging area

git add -A                                    Add all new and changed files to the staging area

git commit -m "[commit message]"              Commit changes

git rm -r [file-name.txt]                     Remove a file (or folder)





Branching & Merging

Command                                              Description

git branch                                           List branches (the asterisk denotes the current branch)

git branch -a                                        List all branches (local and remote)

git branch [branch name]                             Create a new branch

git branch -d [branch name]                          Delete a branch

git push origin --delete [branchName]                Delete a remote branch

git checkout -b [branch name]                        Create a new branch and switch to it

git checkout -b [branch name] origin/[branch name]   Clone a remote branch and switch to it

git checkout [branch name]                           Switch to a branch

git checkout -                                       Switch to the branch last checked out

git checkout -- [file-name.txt]                      Discard changes to a file

git merge [branch name]                              Merge a branch into the active branch

git merge [source branch] [target branch]            Merge a branch into a target branch

git stash                                            Stash changes in a dirty working directory

git stash clear                                      Remove all stashed entries





Sharing & Updating Projects:



Command                                                                             Description

git push origin [branch name]                                                       Push a branch to your remote repository

git push -u origin [branch name]                                                    Push changes to remote repository (and remember the branch)

git push                                                                            Push changes to remote repository (remembered branch)



git push origin --delete [branch name]                                              Delete a remote branch

git pull                                                                            Update local repository to the newest commit

git pull origin [branch name]                                                       Pull changes from remote repository

git remote add origin ssh://git@github.com/[username]/[repository-name].git         Add a remote repository

git remote set-url origin ssh://git@github.com/[username]/[repository-name].git     Set a repository's origin branch to SSH



Inspection & Comparison:


Command                                         Description

git log                                         View changes

git log --summary                               View changes (detailed)

git diff [source branch] [target branch}        Preview changes before merging



Troubleshoot:

Error: Permission denied (publickey).
commands:
C:\Users\Sandy\eclipse-workspace\NewMyWiproDataDrivenFrameWork>git remote add origin https://github.com/Dileep250/DataDrivenFrameWork.git
C:\Users\Sandy\eclipse-workspace\NewMyWiproDataDrivenFrameWork>git push origin master
git@github.com: Permission denied (publickey).
fatal: Could not read from remote repository.
Please make sure you have the correct access rights
and the repository exists.

Solution: Your git URL might have changed. Change the URL in the local directory by using the following command
          git remote set-url origin git@XXXXXXXXXXXX

C:\Users\Sandy\eclipse-workspace\NewMyWiproDataDrivenFrameWork>git remote set-url origin https://github.com/Dileep250/DataDrivenFrameWork.git
C:\Users\Sandy\eclipse-workspace\NewMyWiproDataDrivenFrameWork>git push origin master


Git top 20 Commands

git config
Usage: git config –global user.name “[name]”
Usage: git config –global user.email “[email address]”
This command sets the author name and email address respectively to be used with your commits.

git init
Usage: git init [repository name]
This command is used to start a new repository.

git clone
Usage: git clone [url]
This command is used to obtain a repository from an existing URL.

git add
Usage: git add [file]
This command adds a file to the staging area.

Usage: git add *
This command adds one or more to the staging area.

git commit
Usage: git commit -m “[ Type in the commit message]”
This command records or snapshots the file permanently in the version history.

Usage: git commit -a
This command commits any files you’ve added with the git add command and also commits any files you’ve changed since then.

git diff
Usage: git diff
This command shows the file differences which are not yet staged.

Usage: git diff –staged
This command shows the differences between the files in the staging area and the latest version present.

Usage: git diff [first branch] [second branch]
This command shows the differences between the two branches mentioned.

Git Commands With Examples | Edureka

git reset
Usage: git reset [file]
This command unstages the file, but it preserves the file contents.

Usage: git reset [commit]
This command undoes all the commits after the specified commit and preserves the changes locally.

Usage: git reset –hard [commit]
This command discards all history and goes back to the specified commit.

git status
Usage: git status
This command lists all the files that have to be committed.

git rm
Usage: git rm [file]
This command deletes the file from your working directory and stages the deletion.

git log
Usage: git log
This command is used to list the version history for the current branch.

Usage: git log –follow[file]
This command lists version history for a file, including the renaming of files also.

git show
Usage: git show [commit]
This command shows the metadata and content changes of the specified commit.

git tag
Usage: git tag [commitID]
This command is used to give tags to the specified commit.

git branch
Usage: git branch
This command lists all the local branches in the current repository.

Usage: git branch [branch name]
This command creates a new branch.

Usage: git branch -d [branch name]
This command deletes the feature branch.

git checkout
Usage: git checkout [branch name]
This command is used to switch from one branch to another.

Usage: git checkout -b [branch name]
This command creates a new branch and also switches to it.

git merge
Usage: git merge [branch name]
This command merges the specified branch’s history into the current branch.

git remote
Usage: git remote add [variable name] [Remote Server Link]
This command is used to connect your local repository to the remote server.

git push
Usage: git push [variable name] master
This command sends the committed changes of master branch to your remote repository.

Usage: git push [variable name] [branch]
This command sends the branch commits to your remote repository.

Usage: git push –all [variable name]
This command pushes all branches to your remote repository.

Usage: git push [variable name] :[branch name]
This command deletes a branch on your remote repository.

git pull
Usage:  git pull [Repository Link]
This command fetches and merges changes on the remote server to your working directory.

git stash
Usage: git stash save
This command temporarily stores all the modified tracked files.

Usage: git stash pop
This command restores the most recently stashed files.

Usage: git stash list
This command lists all stashed changesets.

Usage: git stash drop
This command discards the most recently stashed changeset.

